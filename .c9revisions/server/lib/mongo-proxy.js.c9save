{"ts":1380230545174,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var url = require('url');\nvar qs = require('querystring');\nvar https = require('https');\n\nmodule.exports = function(basePath, apiKey) {\n  console.log('Proxying MongoLab at', basePath, 'with', apiKey);\n\n  basePath = url.parse(basePath);\n\n  // Map the request url to the mongolab url\n  // @Returns a parsed Url object\n  var mapUrl = module.exports.mapUrl = function(reqUrlString) {\n    var reqUrl = url.parse(reqUrlString, true);\n    var newUrl = {\n      hostname: basePath.hostname,\n      protocol: basePath.protocol\n    };\n    var query = { apiKey: apiKey};\n    for(var key in reqUrl.query) {\n      query[key] = reqUrl.query[key];\n    }\n    // https request expects path not pathname!\n    newUrl.path = basePath.pathname + reqUrl.pathname + '?' + qs.stringify(query);\n\n    return newUrl;\n  };\n\n\n  // Map the incoming request to a request to the DB\n  var mapRequest = module.exports.mapRequest = function(req) {\n    var newReq = mapUrl(req.url);\n    newReq.method = req.method;\n    newReq.headers = req.headers || {};\n    // We need to fix up the hostname\n    newReq.headers.host = newReq.hostname;\n    return newReq;\n  };\n\n  var proxy = function(req, res, next) {\n    try {\n      var options = mapRequest(req);\n      // Create the request to the db\n      var dbReq = https.request(options, function(dbRes) {\n        var data = \"\";\n        res.headers = dbRes.headers;\n        dbRes.setEncoding('utf8');\n        dbRes.on('data', function(chunk) {\n          // Pass back any data from the response.\n          data = data + chunk;\n        });\n        dbRes.on('end', function() {\n          res.header('Content-Type', 'application/json');\n          res.statusCode = dbRes.statusCode;\n          res.httpVersion = dbRes.httpVersion;\n          res.trailers = dbRes.trailers;\n          res.send(data);\n          res.end();\n        });\n      });\n      // Send any data the is passed from the original request\n      dbReq.end(JSON.stringify(req.body));\n    } catch (error) {\n      console.log('ERROR: ', error.stack);\n      res.json(error);\n      res.end();\n    }\n  };\n\n  // Attach the mapurl fn (mostly for testing)\n  proxy.mapUrl = mapUrl;\n  proxy.mapRequest = mapRequest;\n  return proxy;\n};"]],"start1":0,"start2":0,"length1":0,"length2":2183}]],"length":2183}
